{"ast":null,"code":"var _jsxFileName = \"/mnt/c/project/ETH-NFT-game/nft-game-starter-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport './App.css';\nimport SelectCharacter from './Components/SelectCharacter';\nimport { CONTRACT_ADDRESS, transformCharacterData } from './constants';\nimport myEpicGame from \"./utils/MyEpicGame.json\";\nimport { ethers } from \"ethers\";\nimport Arena from \"./Components/Arena\"; // Constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'moreau_Fivman';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [characterNFT, setCharacterNFT] = useState(null);\n  const [isLoading, setIsLoading] = useState(false); //rinkeby に接続しているか確認\n\n  const checkNetwork = async () => {\n    try {\n      if (window.ethereum.networkVersion !== \"4\") {\n        alert(\"Rinkeby Test Newworkに接続してください\");\n      } else {\n        console.log(\"Rinkeby に接続されています\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Metamask確認\n\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log(\"Make sure you have MetaMask!\");\n        return;\n      } else {\n        console.log(\"We have the ethereum object\", ethereum);\n        const accounts = await ethereum.request({\n          method: \"eth_accounts\"\n        });\n\n        if (accounts.length !== 0) {\n          const account = accounts[0];\n          console.log(\"Found an authorized account: \", account);\n          setCurrentAccount(account);\n        } else {\n          console.log(\"No authorized account found\");\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //レンダリングメソッド\n\n\n  const renderContent = () => {\n    if (!currentAccount) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.imgur.com/TXBQ4cC.png\",\n          alt: \"LUFFY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button connect-wallet-button\",\n          onClick: connectWalletAction,\n          children: \"Connect Wallet To Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    } else if (currentAccount && !characterNFT) {\n      return /*#__PURE__*/_jsxDEV(SelectCharacter, {\n        setCharacterNFT: setCharacterNFT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this);\n    } else if (currentAccount && characterNFT) {\n      return /*#__PURE__*/_jsxDEV(Arena, {\n        characterNFT: characterNFT,\n        setCharacterNFT: setCharacterNFT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this);\n    }\n  }; // connectWallet\n\n\n  const connectWalletAction = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      } //userがウォレットを持っているか\n\n\n      checkIfWalletIsConnected();\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]); //rinkebyに接続されているか\n\n      checkNetwork();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    checkIfWalletIsConnected();\n  }, []);\n  useEffect(() => {\n    const fetchNFTMetadata = async () => {\n      console.log(\"Checking for Character NFT on address: \", currentAccount);\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      console.log(\"【checkIfUserHasNFT】\");\n      const txn = await gameContract.checkIFUserHasNFT();\n      console.log(\"【ENDcheckIfUserHasNFT】\");\n\n      if (txn.name) {\n        console.log(\"User has character NFT\");\n        setCharacterNFT(transformCharacterData(txn));\n      } else {\n        console.log(\"No character NFT found\");\n      }\n    };\n\n    if (currentAccount) {\n      console.log(\"CurrentAccount: \", currentAccount);\n      fetchNFTMetadata();\n    }\n\n    setIsLoading(false);\n  }, [currentAccount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header gradient-text\",\n          children: \"\\u26A1\\uFE0F METAVERSE GAME \\u26A1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\u3068\\u5354\\u529B\\u3057\\u3066\\u30DC\\u30B9\\u3092\\u5012\\u305D\\u3046\\u2728\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), renderContent()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built with @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"WfKwg0DIevkC/Lp/DKpo5wNTmQM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","SelectCharacter","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","ethers","Arena","TWITTER_HANDLE","TWITTER_LINK","App","currentAccount","setCurrentAccount","characterNFT","setCharacterNFT","isLoading","setIsLoading","checkNetwork","window","ethereum","networkVersion","alert","console","log","error","checkIfWalletIsConnected","accounts","request","method","length","account","renderContent","connectWalletAction","fetchNFTMetadata","provider","providers","Web3Provider","signer","getSigner","gameContract","Contract","abi","txn","checkIFUserHasNFT","name","twitterLogo"],"sources":["/mnt/c/project/ETH-NFT-game/nft-game-starter-project/src/App.js"],"sourcesContent":["import React,{useEffect, useState} from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\nimport SelectCharacter from './Components/SelectCharacter';\nimport { CONTRACT_ADDRESS, transformCharacterData } from './constants';\nimport myEpicGame from \"./utils/MyEpicGame.json\";\nimport {ethers} from \"ethers\";\nimport Arena from \"./Components/Arena\"; \n\n// Constants\nconst TWITTER_HANDLE = 'moreau_Fivman';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst App = () => {\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [characterNFT, setCharacterNFT] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //rinkeby に接続しているか確認\n  const checkNetwork = async () =>{\n    try{\n      if(window.ethereum.networkVersion !== \"4\"){\n        alert(\"Rinkeby Test Newworkに接続してください\");\n      }else{\n        console.log(\"Rinkeby に接続されています\");\n      }\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  //Metamask確認\n  const checkIfWalletIsConnected = async () =>{\n    try{\n      const {ethereum} = window;\n      if(!ethereum){\n        console.log(\"Make sure you have MetaMask!\");\n        return;\n      }else{\n        console.log(\"We have the ethereum object\", ethereum);\n        const accounts = await ethereum.request({method: \"eth_accounts\"});\n        if(accounts.length !== 0){\n          const account = accounts[0];\n          console.log(\"Found an authorized account: \", account);\n          setCurrentAccount(account);\n        }else{\n          console.log(\"No authorized account found\");\n        }\n      }\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  //レンダリングメソッド\n  const renderContent = () =>{\n    if(!currentAccount){\n      return(\n        <div className=\"connect-wallet-container\">\n        <img src=\"https://i.imgur.com/TXBQ4cC.png\" alt=\"LUFFY\"/>\n        <button className=\"cta-button connect-wallet-button\" onClick={connectWalletAction}>Connect Wallet To Get Started</button>\n      </div>\n      );\n    }else if (currentAccount && !characterNFT){\n      return <SelectCharacter setCharacterNFT={setCharacterNFT}/>;\n    }else if (currentAccount && characterNFT){\n      return <Arena characterNFT = {characterNFT} setCharacterNFT={setCharacterNFT}/>;\n    }\n  }\n\n  // connectWallet\n  const connectWalletAction = async () => {\n    try{\n      const {ethereum} = window;\n      if(!ethereum){\n        alert(\"Get MetaMask!\");\n        return;\n      }\n      //userがウォレットを持っているか\n      checkIfWalletIsConnected();\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n      \n      //rinkebyに接続されているか\n      checkNetwork();\n\n    }catch(error){\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    checkIfWalletIsConnected();\n  },[]);\n\n  useEffect(() =>{\n    const fetchNFTMetadata = async () =>{\n      console.log(\"Checking for Character NFT on address: \", currentAccount);\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n      \n      console.log(\"【checkIfUserHasNFT】\")\n      const txn = await gameContract.checkIFUserHasNFT();\n      console.log(\"【ENDcheckIfUserHasNFT】\")\n      if(txn.name){\n        console.log(\"User has character NFT\");\n        setCharacterNFT(transformCharacterData(txn));\n      }else{\n        console.log(\"No character NFT found\");\n      }\n    }\n    \n    if(currentAccount){\n      console.log(\"CurrentAccount: \", currentAccount);\n      fetchNFTMetadata();\n    }\n    setIsLoading(false);\n  },[currentAccount]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"header-container\">\n        <p className=\"header gradient-text\">⚡️ METAVERSE GAME ⚡️</p>\n          <p className=\"sub-text\">プレイヤーと協力してボスを倒そう✨</p>\n          {renderContent()}\n        </div>\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`built with @${TWITTER_HANDLE}`}</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}